Git

---------------------------------------------------------------


1.介绍 
	Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。[1]  Git的读音为/gɪt/。

	很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。

	Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？

	事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！

	你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。

	不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。

	安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。

	Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：

	Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。

	Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。

	历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。

2.git与github 

个人 与 房子的关系 

git  是帮助你管理代码的工具 ，你的代码最终为了永久保存是要提交到服务器的。

git --->   用来存储代码的服务器 是自己搭建的 。

git  分布式版本控制系统 (控制代码) --->   github  (全球最大的免费的代码托管平台)

3.git安装和配置 
		
	安装：
		https://git-for-windows.github.io  官方网址 
		git 完整命令教程

	git 基础配置
		设置全局用户名和邮箱
			$ git config --global user.name "Your Name"   
			$ git config --global user.email "email@example.com"

		找到项目目录
			git init 	进行项目初始化设置


		ssh-keygen -t rsa -C "youremail@example.com"  生成ssh文件


		ssh-keygen -t rsa -C "liujunhangWX@163.com"


		
1. 基础配置--->设置全局

2. 生成ssh文件 并且把生成的密钥添加进github-->复制里面的文件代码——>头像->set-->ssb  and -->new SSH key  -->.ssh（id_rsa.pub）

3. 在项目目录初始化  git init --cd D:\ test  移动到test 文件夹commit

4. 链接远程github仓库   git remote add origin  github仓库地址 

5. 添加  git add 文件名  (可以有多个文件名)

6. 提交  git commit -m '关于本次提交的说明'

7. 将本地代码提交到远程github仓库里面  git push -u origin master

8. git pull origin master  [在这之间应该先初始化和链接]---删除整个文件夹内容  初始化 连接  pull
	